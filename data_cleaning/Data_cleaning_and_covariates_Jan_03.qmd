---
title: "Fields COVID-19 dataset exploration"
author: "Ariel Mundo"
format: pdf
toc: true
toc-depth: 2
editor: source
urlcolor: blue
#bibliography: refs.bib
---

```{r, setup, echo=FALSE}
#| warning: false
library(tidyverse)
library(here)
library(lubridate)
library(patchwork)
library(visdat)
library(gt)
library(scales)
library(scico)

thm1<-scale_fill_scico_d(palette="buda",begin=0.3, end=0.8, direction = -1, aesthetics = "fill")

thm2<-scale_fill_scico_d(palette="oleron",begin=0.0, end=1.0, direction = -1, aesthetics = "fill")

thm3<-scale_fill_scico_d(palette="fes",begin=0.0, end=1.0, direction = -1, aesthetics = "fill")
```

# Background

This dataset is about vaccination and other COVID measures in different cities in Ontario. The covariates available are:

-   Age (only above 16, if age above 75 then it appears as 98)
-   Age-group (generated from age)
-   Employment status
-   Remote work within the last month
-   If person receives paid sick leave
-   Number of people in household
-   Number of people from household that attend school
-   Chronic illnesses within the household (*I will not analyze this one as the question is too open and asks about age and disease at the same time*)
-   Race
-   Three first digits of postal code
-   Day, month and year the survey was accessed

There are many responses from the survey on the dataset, but there are some that I would be interesed in analyzing:

-   "Have you received the first dose of the COVID vaccine?" (y/n)

-   (If answered "yes" above) "Have you received the second dose of the COVID vaccine?" (y/n)

-   (If answer was "no" to the first question) "If a vaccine was made available to you you would:"

          - definitely get
          - definitely not get
          - probably get
          - probably not get

**Note: As of Dec 30, 2022 I no longer intend to analyze this last question as after cleaning the dataset it has a missing rate of about 76% and therefore it has too few observations compared to the first two questions**.

# Preliminary Analyses

This document focuses on some preliminary analyses of the data I undertook to assess its representativeness. I performed five major tasks for this preliminary analysis:

-   Choosing covariates to assess their missigness rates
-   Cleaning the data in order to keep all the covariates with a 0% missigness rate
-   Race and ethnicity representativeness of the clean data
-   Trends in the survey answers by geographical location
-   Trends in survey answers by group age

Overall the goal of this analysis was to see what adjustments would need to be made to formally analyze the data.

As way of comparison, I used the 2016 census data for Ontario.

```{r,load-data,warning=FALSE,echo=FALSE}

#the dataframe has missing answers as blankspaces, need to change them all to NA

data<-tibble(read.csv(here("data","Fields_data.csv"),na.strings = c("")))

#set the time and date fields in the format that is required by lubridate

data$time_date_code<-ymd(data$time_date_code)
```

```{r, rename-columns,echo=FALSE,warning=FALSE}

#get a new dataframe and extract variables of interest and make them factors

#get the variables of interest, convert to factors those required
d1<-data%>%select(
  time_date_code,
  city,
  age,
  age_group,
  q02_first_dose,
  q02a_second_dose,
  q11_employed,
  q13_hh_size,
  q09_hh_income,
  q02b_vaccine,
  q16_race,
  q11a_work_remotely,
  q11b_sick_leave,
  q14_hh_attending_school,
  q24a_postal_first,
  q24b_postal_second,
  q24c_postal_third)%>%
  rename(date=time_date_code,
         first_dose=q02_first_dose,
         second_dose=q02a_second_dose,
         get_vaccine=q02b_vaccine,
         h_size=q13_hh_size,
         income=q09_hh_income,
         employed=q11_employed,
         race=q16_race,
         remote_work=q11a_work_remotely,
         sick_leave=q11b_sick_leave,
         school=q14_hh_attending_school,
         pc_1=q24a_postal_first,
         pc_2=q24b_postal_second,
         pc_3=q24c_postal_third
         )%>%
  mutate(across(c("age_group",
            "city",
            "employed",
            "h_size",
            "income",
            "race",
            "remote_work",
            "sick_leave",
            "school"),as.factor))
  
```

## Choosing covariates

The next step is to see from the covariates what are the ones with the highest number of missing observations, in order to decide what can we include in the model.

```{r}
#| echo: false
#| warning: false
#| tbl-cap: Percentage of missing observations \n all covariates

t1<-d1%>%
  select(age_group,
         employed,
         h_size,
         income,race,
         remote_work,
         sick_leave,
         school,
         pc_1,
         pc_2,
         pc_3)%>%
 summarise_all(funs(sum(!is.na(.)/length(.))))%>%#count percentage of NAs
  pivot_longer(everything())%>%
  arrange(desc(value))%>%
  rename(observations=value,
         variable=name)

#get actual observations
t2<-d1%>%
  select(age_group,
         employed,
         h_size,
         income,race,
         remote_work,
         sick_leave,
         school,
         pc_1,
         pc_2,
         pc_3)%>%
 summarise_all(funs(sum(is.na(.)/length(.))))%>%#count percentage of NAs
  pivot_longer(everything())%>%
  arrange(desc(value))%>%
  rename(missigness=value,
         variable=name)




#joining both to make table

t3<-left_join(t1,t2,by="variable")

#make table

t3%>%
  gt()%>%
  fmt_percent(
   columns=missigness,
    decimals=1)
  
```

From the table, it can be seen that the covariate with the least amount of observations is "sick_leave".

However, there are a couple of things we want to consider: The answer to "sick_leave" was answered only by those that reported to be employed (the survey design made this response conditional). Therefore, those unemployed would be excluded in an analysis that considers this variable.

At the very least, it would be interesting to analyze how the reported status of vaccination changed over geographical location and time by:

-   age group
-   income
-   race
-   employment status

From these covariates, the one with the highest missing rate of observations is the employment status. I next cleaned the data in order to have complete observations about employment, and to see how the missing rates looked for the other covariates.

```{r}
#| echo: false
#| warning: false
#| tbl-cap: Missing observations and histograms of the data
#| fig-width: 10

clean_data<-d1%>%
  select(age_group,
         employed,
         age,
         income,
         race,
         city,
         h_size,
         date,
         first_dose,
         second_dose,
         get_vaccine)%>%
  drop_na(employed)

### histogram plots to see issues about income, age and household #####

# clean_data%>%
#   ggplot(aes(x=age))+
#   geom_histogram(binwidth=10)+
#   facet_wrap(~income)


a<-d1%>%
  mutate(income_ord = fct_relevel(income,
                                   "under_15000",
                                   "15000_24999",
                                   "25000_39999",
                                   "40000_59999",
                                   "60000_89999",
                                   "90000_109999",
                                  "over_110000"
                                   ))%>%
 #drop_na(age,income,h_size)%>%
  ggplot(aes(x=age))+
  geom_histogram(binwidth=10)+
  facet_wrap(~income_ord)+
  ylim(c(0,1200))+
  theme(strip.text.x = element_text(size = 8))+
  theme_classic()+
  thm1

b<-d1%>%
  mutate(h_size_ord = fct_relevel(h_size,
                                   "1",
                                   "2",
                                   "3",
                                   "4",
                                   "5",
                                   "6",
                                   "7",
                                   "8",
                                   "9",
                                   "10_or_more"
                                   ))%>%
  #drop_na(age,income,h_size_ord)%>%
  ggplot(aes(x=age))+
  geom_histogram(binwidth=10)+
  facet_wrap(~h_size_ord)+
  ylim(c(0,200))+
  theme(strip.text.x = element_text(size = 8))+
  theme_classic()+
  thm1
 

c<-clean_data%>%
   mutate(income_ord = fct_relevel(income,
                                   "under_15000",
                                   "15000_24999",
                                   "25000_39999",
                                   "40000_59999",
                                   "60000_89999",
                                   "90000_109999",
                                  "over_110000"
                                   ))%>%
  ggplot(aes(x=age))+
  geom_histogram(binwidth=10)+
  facet_wrap(~income_ord)+
  theme(strip.text.x = element_text(size = 5))+
  theme_classic()+
  thm1

d<-clean_data%>%
   mutate(h_size_ord = fct_relevel(h_size,
                                   "1",
                                   "2",
                                   "3",
                                   "4",
                                   "5",
                                   "6",
                                   "7",
                                   "8",
                                   "9",
                                   "10_or_more"
                                   ))%>%
  #drop_na(age,income,h_size_ord)%>%
  ggplot(aes(x=age))+
  geom_histogram(binwidth=10)+
  facet_wrap(~h_size_ord)+
  ylim(c(0,200))+
  theme_classic()+
  theme(strip.text.x = element_text(size = 8))+
  thm1


a+b+plot_annotation(title="Original dataset")

c+d+plot_annotation(title="Clean dataset")


e<-clean_data%>%
  #drop_na(age,income,h_size_ord)%>%
  ggplot(aes(x=age,fill=employed))+
  geom_histogram(stat="count",binwidth=10)+
  #ylim(c(0,200))+
facet_wrap(~income)+
  theme_classic()+
  ggtitle("Clean dataset")+
  #theme(strip.text.x = element_text(size = 8))+
  thm1

f<-d1%>%
  #drop_na(age,income,h_size_ord)%>%
  ggplot(aes(x=age,fill=employed))+
  geom_histogram(stat="count",binwidth=10)+
  #ylim(c(0,200))+
facet_wrap(~income)+
  theme_classic()+
  ylim(c(0,100))+
  ggtitle("Original dataset")+
  #theme(strip.text.x = element_text(size = 8))+
  thm1


f+e



t4<-clean_data%>%
 summarise_all(funs(sum(is.na(.)/length(.))))%>% #count percentage of NAs
  pivot_longer(everything())%>%
  arrange(desc(value))%>%
  rename(missigness=value,
         variable=name)%>%
  gt()%>%
  fmt_percent(
   columns=missigness,
    decimals=1)
t4

```

There seem to be outliers where people \<25 y of age report having an income \>110k while living in a household of 1. Explore the reported household composition of those \<25 with income\>110k.

```{r,outliers}
outliers<-clean_data %>%
  filter(age_group=="16_24" &
           h_size==1 &
           income=="over_110000"
    
  )
  
outliers%>%
  ggplot(aes(x=h_size))+
  geom_histogram(stat="count")

#From the plot it is about 21 entries that are outliers. Now, remove these outliers

clean_data<-anti_join(clean_data,outliers)

```

This table shows something interesting due to the nature of the dataset: the missing observations across variables are different, which is why now, although in the original dataset there were more observations of "race" than "employment", when we select complete observations for the latter we lose some observations for race. The second step of cleaning would be to remove the missing observations from race as well, and see what the proportions of covariates and responses are when compared to the census data.

```{r,complete-obs}
#| echo: false
#| warning: false
#| tbl-cap: Clean dataset missigness


t7<-clean_data%>%
  drop_na(race)%>%
 summarise_all(funs(sum(is.na(.)/length(.))))%>% #count percentage of NAs
  pivot_longer(everything())%>%
  arrange(desc(value))%>%
  rename(missigness=value,
         variable=name)%>%
  gt()%>%
  fmt_percent(
   columns=missigness,
    decimals=1)
t7
```

It can be seen that after removing all missing observations in the covariates, the only response that still has missing observations is the answers for the second dose of the vaccine, with 27% of missing observations.

## Race and Ethnicity

Once the data was clean, I explored how the race and ethnicity information from the dataset compared to the data from the Census.

```{r,ethnic information}
#| echo: false
#| warning: false
#| tbl-cap: Ethnic information from the clean dataset
  t6<-clean_data%>%
    select(race)%>%
    group_by(race)%>%
    summarise(observations = n()) %>%
  mutate(percentage = observations / sum(observations))%>%
    gt()%>%
      fmt_percent(
   columns=percentage,
    decimals=1)
  
t6
```

Below is the information provided by the 2016 Canada Census for Ontario for different visible minorities and ethnic origins. [Link to Census Data](https://www12.statcan.gc.ca/census-recensement/2016/dp-pd/prof/details/page.cfm?Lang=E&Geo1=PR&Code1=35&Geo2=PR&Code2=01&SearchText=Ontario&SearchType=Begins&SearchPR=01&B1=Ethnic%20origin&TABID=1&type=1).

| Ethnicity/Race | percentage |
|----------------|:-----------|
| Arab           | 1.6%       |
| Black          | 4.7%       |
| East Asian     | 6.6%       |
| Indigenous     | 3.9%       |
| Latin American | 1.5%       |
| Mixed          | 1.0%       |
| Other          | 0.7%       |
| South Asian    | 8.7%       |

: Data from the 2016 Census for Ontario

In the table above, the following data were obtained from the "Visible Minorities" from the Census:

-   Arab
-   Black
-   South Asian
-   East Asian (computed by adding the Chinese, Korean and Japanese entries)
-   Mixed ("multiple visible minorities" entry in the census)
-   Other (from the "visible minority n.i.e" entry in the census)

The following data were obtained from the "ethnic origin" data from the census: - Indigenous - European Origins

However, according to the census "ethnicity" and "visible minority" seem to have different values. For example, in the Visible Minority entry of the census Latin American is 1.5%, but in the "Ethnic Origin" data the value is 2.4%.

Moreover, I would need to adjust the data for Pacific Islanders, as the survey included East Asian and Pacific Islanders in the same question but they are categorized differently in the census.

Lastly, the survey had "white caucasian" as one of the options but that category is not present in the census data. The most approximate entry on the census is "European origins" (61.6%).

**Overall, we weighted the data because it is not representative of the population distribution in Ontario**.

## Geographical location

Next, I was interested in analyzing the geographical distribution of the participants over time, to see the percentage of answers from Toronto. This is important to see where the majority of the answers came from (is there such thing as geographical weighting?). The same will be done with the age groups of the participants, as this is data that is reported in the census.

```{r,plot-location}
#| echo: false
#| warning: false
#| fig-width: 8
#| fig-height: 4
#| fig-cap: Percentage of survey answers by city



p1<-clean_data%>%
  select(city)%>%
  mutate(location=as.character(case_when(city=="Toronto"~"Toronto",
                            city!="Toronto"~ "All other cities"
                          )))

p1$location<-as.factor(p1$location)


ggplot(p1 %>% count(location) %>%    # then count number in each group
         mutate(pct=n/sum(n),               # Calculate percent within each group
                ypos = 200),  # Calculate label positions
       aes(location, n, fill=location)) +
  geom_bar(stat="identity") +
  geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%"), y=ypos))+
  theme_classic()+
  thm2


```

The proportion of responses from Toronto is 30.9% of the total. The Census data indicates that Toronto has around 38% of the total population province (5,433,590/14,223,942). This would mean that a correction would be needed also for the proportion of answers.

Additionally, the data needs to be cleaned as some of the responses do not have an assigned city, and the entry only reads "None". These entries will be removed as they lack geographical information.

```{r, remove-entries}

clean_data<-clean_data%>%
  filter(city!="None")


```

## Age groups

Another important aspect to consider is how the trends in the responses look over time by age group. This is because from the census data, the age groups for the province are as follows:

| Group age   | Percentage of population |
|-------------|:-------------------------|
| 15-24       | 12.7%                    |
| 25-34       | 12.9%                    |
| 35-44       | 12.8%                    |
| 45-54       | 14.9%                    |
| 55-64       | 13.7%                    |
| 65 and over | 16.7                     |

: Age distributions from the 2016 Census for Ontario

However, when plotted the proportion of answers at each time point among groups, the distribution looks rather different.

```{r,trends-by-age}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8
#| fig-cap: Age group distributions from the dataset

p2<-clean_data%>%
  select(age_group)%>%
   mutate(age_group_ord = fct_relevel(age_group,
                                      "16_24",
                                      "25_34",
                                      "35_44",
                                      "45_54",
                                      "55_64",
                                  "65_and_over"
                                          ))

  ggplot(p2%>%count(age_group_ord) %>%    # G count number in each group
         mutate(pct=n/sum(n),               # Calculate percent within each group
                ypos = 200),  # Calculate label positions
       aes(age_group_ord, n, fill=age_group_ord)) +
  geom_bar(stat="identity") +
  geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%"), y=ypos))+
  theme_classic()+
  thm1



```

It can be seen from the graph that the proportion of answers by group age do not follow the overall distribution from the province.

## Income

The final aspect I wanted to explore was the income distribution. In this regard the question from the survey was "What is your household annual income?". To compare the results of this answer, I used the "Household total income groups in 2015 for private households" from the Census data. The information from the census appears next.

| Household income range (CAD) | Percentage |
|------------------------------|:-----------|
| \< 15,000                    | 5.7%       |
| 15,000 - 24,999              | 7.5%       |
| 25,000 - 39,999              | 11.6%      |
| 40,000- 59,999               | 15.4%      |
| 60,000 - 89,999              | 19.5%      |
| \>90,000                     | 40.4%      |

: Income percentages from the 2016 Census for Ontario

One thing to keep in mind in this case is that the brackets for income in the census data are different than the brackets used in the survey. The census does CAD 4,999 brackets (e.g., CAD 5,000- CAD 9,9999) up to CAD 49,999 and then it does CAD 9,999 brackets up to CAD 99,999 but after that, the brackets increase to CAD 24,999, and therefore, one cannot obtain percentages for the 90,000-109,999 and \>110,000 brackets from the survey.

```{r,income}
#| echo: false
#| warning: false
#| fig-width: 8
#| fig-height: 4

p3<-clean_data%>%
  select(date,income)%>%
  mutate(income_ord = fct_relevel(income,
                                  "under_15000",
                                  "15000_24999",
                                  "25000_39999",
                                  "40000_59999",
                                  "60000_89999",
                                  "90000_109999",
                                  "over_110000"
                                ))


ggplot(p3%>% count(income_ord)%>%  # count number in each group
         mutate(pct=n/sum(n),               # Calculate percent within each group
                ypos = 200),  # Calculate label positions
       aes(income_ord, n, fill=income_ord)) +
  geom_bar(stat="identity") +
  geom_text(aes(label=paste0(sprintf("%1.1f", pct*100),"%"), y=ypos))+
  theme_classic()+
  thm3


```

Again, there are differences here in the patterns of response. The \<15,000 bracket accounts for about 20% of the responses, a much higher rate than the percentage they represent from the census, and there is variation within the other brackets as well.

# Joining the municipalities data

We have obtained and cleaned the data of the municipalities from the province of Ontario website, and cleaned the dataset to obtain the city names and geographical locations. Further details can be found in `municipalities.qmd` in the `data_cleaning` directory. Next, we will join and match the geographical location from the municipalities dataset to the clean dataset we have obtained in this document so far.

```{r,join-datasets}

municipalities<-read.csv(here("data","municipalities_clean.csv"))

municipalities$Municipal.status<-as.factor(municipalities$Municipal.status)

municipalities$Geographic.area<-as.factor(municipalities$Geographic.area)

municipalities$city<-as.factor(municipalities$city)


clean_data<-left_join(clean_data,municipalities,by="city")

```


Need to explore which entries were left without a geographical region:

```{r, missing-geog-area}

test<-clean_data %>%
  filter(is.na(Geographic.area))%>%
  distinct(city)

```


There are 756 observations that did not get a geographical region, and they correspond to 177 unique cities. These will be exported to a csv file in order to manually write their geographical areas following the Association of Municipalities of Ontario divisions, and using Wikipedia to check the status of each municipality.

```{r,write-file}
#| echo: false

write.csv(test,here("data","missing_municipalities.csv"),row.names = FALSE)

```

The code chunk above was ran once to get the names of the municipalities. After manually entering the geographic areas, the file was saved as `missing_municipalities_updated.csv`, and this will be the file to be used for the next steps.

Note: there is one city "Kinburn", but there are two communities with such name, one in Huron County and one in Carelton County, for the time being Huron County is assigned, will check later if is better to remove it. 

Also one occurence of "Sydenham", which can be a ward in Kingston or a community in Frotenac. Will assign Frotenac for the time being.

## Merging missing municipalities and geographic area names

After manually assigning the geographical regions to the municipalities that were missing (which can be found in `missing_municipalities.csv` in the `data` directory), these will be merged as the dataset `geographic_areas.csv` (also in `data`), which contains the titles for each region (e.g., "County", "Region").

```{r,merge-datasets-2}



```
